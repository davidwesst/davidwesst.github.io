{"version":3,"file":"component---src-templates-tags-template-js-19a2336e5488f77e7ff0.js","mappings":"+KAmCMA,EAAW,SAASC,GACxB,OAAGA,EAAW,EACL,gBAAC,EAAAC,KAAD,CAAMC,GAAG,SAAT,sBAGP,GAIJ,EAtCiB,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,MAA+C,IAAxCH,SAAAA,OAAwC,MAA7B,EAA6B,EAC3DI,GAD2D,EAA1BC,UACdF,EAAMG,KAAI,YAAmD,IAAhDC,EAA+C,EAA/CA,YAAaC,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WAC1DC,EAA+CJ,EAA/CI,MAAOC,EAAwCL,EAAxCK,KAAMC,EAAkCN,EAAlCM,WAAYC,EAAsBP,EAAtBO,KAAMC,EAAgBR,EAAhBQ,YAC/BC,EAASR,EAATQ,KAER,OACE,gBAACC,EAAD,CACEC,IAAKF,EACLJ,KAAMA,EACNC,WAAYA,EACZF,MAAOA,EACPG,KAAMA,EACNE,KAAMA,EACNN,WAAYA,EACZK,YAAaA,EACbN,QAASA,QAKTU,EAA0BnB,EAAW,EAAKI,EAAiBgB,MAAM,EAAGpB,GAAYI,EACtF,OACE,gCACGe,EACApB,EAASC,KAgBViB,EAAe,SAAC,GASf,IARLN,EAQI,EARJA,MACAG,EAOI,EAPJA,KACAJ,EAMI,EANJA,WACAE,EAKI,EALJA,KAEAH,GAGI,EAJJI,WAII,EAHJJ,SACAM,EAEI,EAFJA,YACAC,EACI,EADJA,KAEA,OACI,2BAASK,UCvDG,iCDwDV,8BACE,gBAAC,EAAApB,KAAD,CAAMC,GAAIc,GAAM,0BAAKL,IACrB,4BAAOG,EAAP,MAAgBJ,EAAhB,aAFF,MAEgD,gBAAC,IAAD,CAAME,KAAMA,KAE5D,qBACEU,wBAAyB,CACvBC,OAAQR,GAAeN,Q,6EEnDnC,EARmB,SAAC,GAAoB,IAAnBe,EAAkB,EAAlBA,SAAUtB,EAAQ,EAARA,GAC7B,OACE,gBAAC,EAAAD,KAAD,CAAMoB,UCNc,wCDMgBnB,GAAIA,GACrCsB,K,6EE0BP,EAhBa,SAAC,GAAyB,IAAvBZ,EAAsB,EAAtBA,KAAMa,EAAgB,EAAhBA,UACpB,OACE,gCACGA,EAPH,wBAAMJ,UCXa,iCDWnB,eAO4B,GACzBT,GACCA,EAAKN,KAAI,SAACoB,GACR,OACE,wBAAML,UCxBD,0BDwBwBH,IAAKQ,GAChC,gBAAC,EAAAzB,KAAD,CAAMC,GAAE,UArBDyB,EAqBwBD,EApBpCC,EACJC,MAAM,sEACNtB,KAAI,SAACuB,GAAD,OAAOA,EAAEC,iBACbC,KAAK,OAiB4CL,IArBlC,IAACC,Q,uGEyCrB,UAvCqB,SAAC,GAA2B,IAAzBK,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KAC3BP,EAAQM,EAARN,IACAQ,EAAeD,EAAKE,kBAApBD,WACF/B,EAAQ8B,EAAKE,kBAAkBC,MAC/BzB,EAAK,gBAAmBe,EAE9B,OACE,gBAAC,IAAD,CAAQf,MAAOA,GACb,gBAAC0B,EAAD,KACE,gBAACC,EAAD,KACGJ,EADH,kBAC8BR,EAD9B,KAGA,gBAAC,EAAAzB,KAAD,CACEsC,IAAG,kKAMHrC,GAAG,SAPL,iBAWA,gBAAC,IAAD,CAAUC,MAAOA,IAEjB,gBAAC,IAAD,CACEoC,IAAG,6FAIHrC,GAAG,SALL,oBAgBR,IAAMmC,EAAsBG,EAAAA,GAAAA,IAAH,yDAInBF,EAAQE,EAAAA,GAAAA,GAAH","sources":["webpack://dw-website/./src/components/post-list.js","webpack://dw-website/./src/styles/post-list.module.css","webpack://dw-website/./src/components/styled-link.js","webpack://dw-website/./src/styles/styled-link.module.css","webpack://dw-website/./src/components/tags.js","webpack://dw-website/./src/styles/tags.module.css","webpack://dw-website/./src/templates/tags-template.js"],"sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\nimport Tags from './tags';\n\nimport * as styles from '../styles/post-list.module.css';\n\nconst PostList = ({ posts, maxCount = 0, listTitle = 'Posts' }) => {\n  const allPostListItems = posts.map(({ frontmatter, fields, excerpt, timeToRead }) => {\n    const { title, tags, categories, date, description } = frontmatter;\n    const { slug } = fields;\n\n    return (\n      <PostListItem\n        key={slug}\n        tags={tags}\n        categories={categories}\n        title={title}\n        date={date}\n        slug={slug}\n        timeToRead={timeToRead}\n        description={description}\n        excerpt={excerpt}\n      />\n    );\n  });\n  \n  const postListItemsToDisplay = (maxCount > 0) ? allPostListItems.slice(0, maxCount) : allPostListItems;\n  return (\n    <>\n      {postListItemsToDisplay}\n      {MoreLink(maxCount)}\n    </>\n  );\n};\n\nconst MoreLink = function(maxCount) {\n  if(maxCount > 0) {\n    return <Link to=\"/blog\">More Posts...</Link>;\n  }\n  else {\n    return;\n  }\n}\n\nexport default PostList;\n\nconst PostListItem = ({  \n  title,\n  date,\n  timeToRead,\n  tags,\n  categories,\n  excerpt,\n  description,\n  slug,\n}) => {\n  return (\n      <article className={styles.item}>\n        <header>\n          <Link to={slug}><h3>{title}</h3></Link>\n          <span>{date} | {timeToRead} min read</span> | <Tags tags={tags} />\n        </header>\n        <p\n          dangerouslySetInnerHTML={{\n            __html: description || excerpt,\n          }}\n        />\n      </article>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport var postList = \"post-list-module--postList--XJvpC\";\nexport var item = \"post-list-module--item--ViIhs\";","import React from 'react';\nimport { Link } from 'gatsby';\n\nimport * as styles from '../styles/styled-link.module.css';\n\nconst StyledLink = ({children, to}) => {\n  return (\n    <Link className={styles.StyledLink} to={to}>\n      {children}\n    </Link>\n  );\n}\n\nexport default StyledLink;\n","// extracted by mini-css-extract-plugin\nexport var StyledLink = \"styled-link-module--StyledLink--O3GYg\";","import React from 'react';\nimport { Link } from 'gatsby';\n\nimport * as styles from \"../styles/tags.module.css\";\n\nconst toKebabCase = (str) => {\n  return str\n    .match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)\n    .map((x) => x.toLowerCase())\n    .join('-');\n};\n\nconst getLabel = () => {\n  return (\n    <span className={styles.TagsLabel}>Tagged with</span>\n  )\n}\n\nconst Tags = ({ tags, showLabel }) => {\n  return (\n    <>\n      {showLabel ? getLabel() : ''}\n      {tags &&\n        tags.map((tag) => {\n          return (\n            <span className={styles.Tag} key={tag}>\n              <Link to={`/tags/${toKebabCase(tag)}`}>{tag}</Link>\n            </span>\n          );\n        })}\n    </>\n  );\n};\n\nexport default Tags;","// extracted by mini-css-extract-plugin\nexport var Tag = \"tags-module--Tag--OE7fw\";\nexport var StyledTags = \"tags-module--StyledTags--EqHel\";\nexport var TagsLabel = \"tags-module--TagsLabel--i-a+c\";","import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport Layout from '../components/layout';\nimport PostList from '../components/post-list';\nimport StyledLink from '../components/styled-link';\nimport styled from 'styled-components';\n\nconst TagsTemplate = ({ pageContext, data }) => {\n  const { tag } = pageContext;\n  const { totalCount } = data.allMarkdownRemark;\n  const posts = data.allMarkdownRemark.nodes;\n  const title = `Posts tagged ${tag}`;\n\n  return (\n    <Layout title={title}>\n      <TagsTemplateWrapper>\n        <Title>\n          {totalCount} posts tagged \"{tag}\"\n        </Title>\n        <Link\n          css={`\n            margin-top: var(--size-400);\n            display: inline-block;\n            color: inherit;\n            text-transform: uppercase;\n          `}\n          to=\"/tags\"\n        >\n          view all tags\n        </Link>\n        <PostList posts={posts} />\n\n        <StyledLink\n          css={`\n            margin-top: var(--size-400);\n            display: inline-block;\n          `}\n          to=\"/tags\"\n        >\n          View All tags\n        </StyledLink>\n      </TagsTemplateWrapper>\n    </Layout>\n  );\n};\n\nexport default TagsTemplate;\n\nconst TagsTemplateWrapper = styled.div`\n  padding-top: var(--size-900);\n`;\n\nconst Title = styled.h1`\n  font-size: var(--size-700);\n`;\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: {\n        frontmatter: { tags: { in: [$tag] } }\n        fields: { contentType: { eq: \"posts\" } }\n      }\n    ) {\n      totalCount\n      nodes {\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          description\n          tags\n          title\n        }\n        timeToRead\n        excerpt\n      }\n    }\n  }\n`;\n"],"names":["MoreLink","maxCount","Link","to","posts","allPostListItems","listTitle","map","frontmatter","fields","excerpt","timeToRead","title","tags","categories","date","description","slug","PostListItem","key","postListItemsToDisplay","slice","className","dangerouslySetInnerHTML","__html","children","showLabel","tag","str","match","x","toLowerCase","join","pageContext","data","totalCount","allMarkdownRemark","nodes","TagsTemplateWrapper","Title","css","styled"],"sourceRoot":""}