{"version":3,"file":"component---src-templates-index-template-js-9c4a0c36abe9a1233045.js","mappings":"qKAkCA,EAhBmB,SAAC,GAA+B,IAA7BA,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,UAChC,OACE,2BACGA,EAPH,wBAAMC,UCZmB,6CDYzB,sBAO4B,GACzBF,GACCA,EAAWG,KAAI,SAACC,GACd,OACE,wBAAMC,IAAKD,EAAUF,UCxBX,sCDyBR,gBAAC,EAAAI,KAAD,CAAMC,GAAE,gBArBDC,EAqB8BJ,EApB1CI,EACJC,MAAM,sEACNN,KAAI,SAACO,GAAD,OAAOA,EAAEC,iBACbC,KAAK,OAiBuDR,IArB7C,IAACI,Q,iGEyBrB,EAvBiB,YAAgB,IACzBK,EADwB,EAAZC,MACKX,KAAI,YAAmD,IAAhDY,EAA+C,EAA/CA,YAAaC,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WAClDC,EAAkCJ,EAAlCI,MAAOC,EAA2BL,EAA3BK,KAAMpB,EAAqBe,EAArBf,WAAYqB,EAASN,EAATM,KACzBC,EAASN,EAATM,KAER,OACE,gBAACC,EAAD,CACElB,IAAKiB,EACLF,KAAMA,EACNpB,WAAYA,EACZmB,MAAOA,EACPE,KAAMA,EACNC,KAAMA,EACNJ,WAAYA,EACZM,YAAaT,EAAYE,QACzBA,QAASA,OAKf,OAAO,sBAAIf,UC1Be,2CD0B4BW,IAKlDU,EAAe,SAAC,GASf,IARLJ,EAQI,EARJA,MACAE,EAOI,EAPJA,KACAH,EAMI,EANJA,WACAE,EAKI,EALJA,KACApB,EAII,EAJJA,WACAiB,EAGI,EAHJA,QACAO,EAEI,EAFJA,YACAF,EACI,EADJA,KAEA,OACE,sBAAIpB,UCzCwB,+CD0C1B,gBAAC,IAAD,CAAYF,WAAYA,IAExB,sBAAIE,UC3CiB,0CD4CnB,gBAAC,EAAAI,KAAD,CAAMC,GAAIe,GAAOH,IAEnB,qBAAGjB,UC7CoB,2CD8CrBuB,wBAAyB,CACvBC,OAAQF,GAAeP,KAI3B,gBAAC,IAAD,CAAMG,KAAMA,IACZ,uBAAKlB,UCnDe,yCDoDlB,4BAAOmB,GACP,4BAAOH,EAAP,a,6EE7CR,EARmB,SAAC,GAAoB,IAAnBS,EAAkB,EAAlBA,SAAUpB,EAAQ,EAARA,GAC7B,OACE,gBAAC,EAAAD,KAAD,CAAMJ,UCNc,wCDMgBK,GAAIA,GACrCoB,K,6EE0BP,EAhBa,SAAC,GAAyB,IAAvBP,EAAsB,EAAtBA,KAAMnB,EAAgB,EAAhBA,UACpB,OACE,uBAAKC,UClBe,kCDmBjBD,EAPH,wBAAMC,UCXa,iCDWnB,eAO4B,GACzBkB,GACCA,EAAKjB,KAAI,SAACyB,GACR,OACE,wBAAM1B,UCxBD,0BDwBwBG,IAAKuB,GAChC,gBAAC,EAAAtB,KAAD,CAAMC,GAAE,UArBDC,EAqBwBoB,EApBpCpB,EACJC,MAAM,sEACNN,KAAI,SAACO,GAAD,OAAOA,EAAEC,iBACbC,KAAK,OAiB4CgB,IArBlC,IAACpB,Q,2FEiCrB,UA/BiB,SAAC,GAAc,IAAZqB,EAAW,EAAXA,KACZf,EAAQe,EAAKC,kBAAkBC,MAC/BC,EAAQH,EAAKI,eAAeC,KAC5Bf,EAAQU,EAAKI,eAAelB,YAAYI,MAE9C,OACE,gBAAC,IAAD,CAAQA,MAAOA,GACb,gBAACgB,EAAD,CACEV,wBAAyB,CACvBC,OAAQM,KAIZ,gBAAC,IAAD,CAAUlB,MAAOA,IACjB,gBAAC,IAAD,CACEsB,IAAG,uNAQH7B,GAAG,SATL,oBAmBN,IAAM4B,EAAQE,EAAAA,GAAAA,IAAH","sources":["webpack://dw-website/./src/components/categories.js","webpack://dw-website/./src/styles/categories.module.css","webpack://dw-website/./src/components/post-list.js","webpack://dw-website/./src/styles/post-list.module.css","webpack://dw-website/./src/components/styled-link.js","webpack://dw-website/./src/styles/styled-link.module.css","webpack://dw-website/./src/components/tags.js","webpack://dw-website/./src/styles/tags.module.css","webpack://dw-website/./src/templates/index-template.js"],"sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\n\nimport * as styles from \"../styles/categories.module.css\";\n\nconst toKebabCase = (str) => {\n  return str\n    .match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)\n    .map((x) => x.toLowerCase())\n    .join('-');\n};\n\nconst getLabel = () => {\n  return (\n    <span className={styles.CategoriesLabel}>Categorized under </span>\n  )\n}\n\nconst Categories = ({ categories, showLabel }) => {\n  return (\n    <div>\n      {showLabel ? getLabel() : '' }\n      {categories &&\n        categories.map((category) => {\n          return (\n            <span key={category} className={styles.Category} >\n              <Link to={`/categories/${toKebabCase(category)}`}>{category}</Link>\n            </span>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default Categories;\n","// extracted by mini-css-extract-plugin\nexport var Category = \"categories-module--Category--x-dkq\";\nexport var CategoriesLabel = \"categories-module--CategoriesLabel--dN+ff\";","import React from 'react';\nimport { Link } from 'gatsby';\nimport Tags from './tags';\nimport Categories from './categories';\n\nimport * as postListStyles from '../styles/post-list.module.css';\n\nconst PostList = ({ posts }) => {\n  const PostList = posts.map(({ frontmatter, fields, excerpt, timeToRead }) => {\n    const { title, tags, categories, date } = frontmatter;\n    const { slug } = fields;\n\n    return (\n      <PostListItem\n        key={slug}\n        tags={tags}\n        categories={categories}\n        title={title}\n        date={date}\n        slug={slug}\n        timeToRead={timeToRead}\n        description={frontmatter.excerpt}\n        excerpt={excerpt}\n      />\n    );\n  });\n\n  return <ul className={postListStyles.StyledPostList}>{PostList}</ul>;\n};\n\nexport default PostList;\n\nconst PostListItem = ({\n  title,\n  date,\n  timeToRead,\n  tags,\n  categories,\n  excerpt,\n  description,\n  slug,\n}) => {\n  return (\n    <li className={postListStyles.StyledPostListItem}>\n      <Categories categories={categories} />\n\n      <h2 className={postListStyles.PostListTitle}>\n        <Link to={slug}>{title}</Link>\n      </h2>\n      <p className={postListStyles.PostListExcerpt}\n        dangerouslySetInnerHTML={{\n          __html: description || excerpt,\n        }}\n      />\n\n      <Tags tags={tags} />\n      <div className={postListStyles.PostListMeta}>\n        <span>{date}</span>\n        <span>{timeToRead} mins</span>\n      </div>\n    </li>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport var StyledPostList = \"post-list-module--StyledPostList--oyaqp\";\nexport var StyledPostListItem = \"post-list-module--StyledPostListItem--pILJH\";\nexport var PostListTitle = \"post-list-module--PostListTitle---pkD7\";\nexport var PostListExcerpt = \"post-list-module--PostListExcerpt--aFquN\";\nexport var PostListMeta = \"post-list-module--PostListMeta--2SxjM\";","import React from 'react';\nimport { Link } from 'gatsby';\n\nimport * as styles from '../styles/styled-link.module.css';\n\nconst StyledLink = ({children, to}) => {\n  return (\n    <Link className={styles.StyledLink} to={to}>\n      {children}\n    </Link>\n  );\n}\n\nexport default StyledLink;\n","// extracted by mini-css-extract-plugin\nexport var StyledLink = \"styled-link-module--StyledLink--O3GYg\";","import React from 'react';\nimport { Link } from 'gatsby';\n\nimport * as styles from \"../styles/tags.module.css\";\n\nconst toKebabCase = (str) => {\n  return str\n    .match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)\n    .map((x) => x.toLowerCase())\n    .join('-');\n};\n\nconst getLabel = () => {\n  return (\n    <span className={styles.TagsLabel}>Tagged with</span>\n  )\n}\n\nconst Tags = ({ tags, showLabel }) => {\n  return (\n    <div className={styles.StyledTags} > \n      {showLabel ? getLabel() : ''}\n      {tags &&\n        tags.map((tag) => {\n          return (\n            <span className={styles.Tag} key={tag}>\n              <Link to={`/tags/${toKebabCase(tag)}`}>{tag}</Link>\n            </span>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default Tags;","// extracted by mini-css-extract-plugin\nexport var Tag = \"tags-module--Tag--OE7fw\";\nexport var StyledTags = \"tags-module--StyledTags--EqHel\";\nexport var TagsLabel = \"tags-module--TagsLabel--i-a+c\";","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/layout';\nimport PostList from '../components/post-list';\nimport styled from 'styled-components';\nimport StyledLink from '../components/styled-link';\n\nconst HomePage = ({ data }) => {\n  const posts = data.allMarkdownRemark.nodes;\n  const intro = data.markdownRemark.html;\n  const title = data.markdownRemark.frontmatter.title;\n\n  return (\n    <Layout title={title}>\n      <Intro\n        dangerouslySetInnerHTML={{\n          __html: intro,\n        }}\n      />\n\n      <PostList posts={posts} />\n      <StyledLink\n        css={`\n          display: block;\n          margin-top: var(--size-800);\n          margin-bottom: var(--size-800);\n          margin-left: auto;\n          margin-right: auto;\n          width: fit-content;\n        `}\n        to=\"/blog\"\n      >\n        View All posts\n      </StyledLink>\n    </Layout>\n  );\n};\n\nexport default HomePage;\n\nconst Intro = styled.div`\n  display: flex;\n  flex-direction: column;\n  max-width: 60ch;\n  align-items: center;\n  margin-right: auto;\n  margin-left: auto;\n  margin-top: var(--size-800);\n  margin-bottom: var(--size-900);\n  text-align: center;\n\n  & p {\n    text-transform: capitalize;\n    font-size: var(--size-400);\n  }\n\n  @media screen and (max-width: 700px) {\n    & h1 {\n      font-size: var(--size-700);\n    }\n  }\n`;\n\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      filter: { fields: { contentType: { eq: \"posts\" } } }\n      sort: { order: DESC, fields: frontmatter___date }\n      limit: 9\n    ) {\n      nodes {\n        fields {\n          slug\n        }\n        excerpt\n        timeToRead\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          description\n          excerpt\n          title\n          tags\n          categories\n        }\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n"],"names":["categories","showLabel","className","map","category","key","Link","to","str","match","x","toLowerCase","join","PostList","posts","frontmatter","fields","excerpt","timeToRead","title","tags","date","slug","PostListItem","description","dangerouslySetInnerHTML","__html","children","tag","data","allMarkdownRemark","nodes","intro","markdownRemark","html","Intro","css","styled"],"sourceRoot":""}