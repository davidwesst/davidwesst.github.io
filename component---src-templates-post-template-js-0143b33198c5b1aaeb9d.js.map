{"version":3,"file":"component---src-templates-post-template-js-0143b33198c5b1aaeb9d.js","mappings":"qKAkCA,EAhBa,SAAC,GAAyB,IAAvBA,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UACpB,OACE,gCACGA,EAPH,wBAAMC,UCXa,iCDWnB,eAO4B,GACzBF,GACCA,EAAKG,KAAI,SAACC,GACR,OACE,wBAAMF,UCxBD,0BDwBwBG,IAAKD,GAChC,gBAAC,EAAAE,KAAD,CAAMC,GAAE,UArBDC,EAqBwBJ,EApBpCI,EACJC,MAAM,sEACNN,KAAI,SAACO,GAAD,OAAOA,EAAEC,iBACbC,KAAK,OAiB4CR,IArBlC,IAACI,Q,qJE6BrB,EAhBmB,SAAC,GAA+B,IAA7BK,EAA4B,EAA5BA,WAAYZ,EAAgB,EAAhBA,UAChC,OACE,2BACGA,EAPH,wBAAMC,UCZmB,6CDYzB,sBAO4B,GACzBW,GACCA,EAAWV,KAAI,SAACW,GACd,OACE,wBAAMT,IAAKS,EAAUZ,UCxBX,sCDyBR,gBAAC,EAAAI,KAAD,CAAMC,GAAE,gBArBDC,EAqB8BM,EApB1CN,EACJC,MAAM,sEACNN,KAAI,SAACO,GAAD,OAAOA,EAAEC,iBACbC,KAAK,OAiBuDE,IArB7C,IAACN,OEHfO,EAAc,eA4BpB,EA1BiB,WAuBb,OArBAC,EAAAA,EAAAA,YAAU,WACNC,OAAOC,UAAY,CACfC,gBAAiB,iBACjBC,oBAAqB,GAGzB,IAAMC,EAASC,SAASC,cAAc,UACtCF,EAAOG,IAAM,8CAAgDC,KAAKC,MAClEL,EAAOM,OAAQ,EAEf,IAAMC,EAAWN,SAASO,eAAed,GAKzC,OAJIa,GAAUA,EAASE,YAAYT,GAI5B,WACH,IAAMO,EAAWN,SAASO,eAAed,GACrCa,IAAUA,EAASG,UAAY,OAExC,IAEI,uBAAKC,GAAIjB,KCsCpB,EAxDqB,SAAC,GAAc,IAAZkB,EAAW,EAAXA,KACtB,EAAsCA,EAAKC,eAAnCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,OACrBC,EAAOL,EAAKK,KACZC,EAAON,EAAKM,KACZC,EAAcL,EAAYM,aAC9B,gBAACC,EAAD,KACE,gBAAC,EAAAC,EAAD,CACEC,IAAI,GACJC,MAAOV,EAAYM,aAAaK,gBAAgBC,mBAGlD,GAEJ,OACE,gBAAC,IAAD,CACEC,MAAOb,EAAYa,MACnBC,YAAad,EAAYe,SAAWf,EAAYc,YAChDE,YACEhB,EAAYM,aAAeN,EAAYM,aAAaW,UAAY,IAIlE,gBAACC,EAAD,KACE,+BACE,gBAACC,EAAD,KAAYnB,EAAYa,OACxB,gBAACO,EAAD,KAAWpB,EAAYqB,MACvB,gBAAC,EAAD,CAAY3C,WAAYsB,EAAYtB,WAAYZ,WAAW,IAE1DuC,EAED,gBAACiB,EAAD,CAAaC,wBAAyB,CAAEC,OAAQvB,KAChD,gBAAC,IAAD,CAAMpC,KAAMmC,EAAYnC,QAG1B,gBAAC,EAAD,CAAU4D,KAAMvB,EAAOuB,OAEvB,gBAACC,EAAD,KACGvB,GACC,2BACE,wCACA,gBAAC,EAAAhC,KAAD,CAAMC,GAAI+B,EAAKD,OAAOuB,MAAtB,IAA8BtB,EAAKH,YAAYa,QAIlDT,GACC,2BACE,oCACA,gBAAC,EAAAjC,KAAD,CAAMC,GAAIgC,EAAKF,OAAOuB,MAAtB,IAA8BrB,EAAKJ,YAAYa,YAWvDK,EAAcS,EAAAA,GAAAA,IAAH,wLASXR,EAAYQ,EAAAA,GAAAA,GAAH,uDAITP,EAAWO,EAAAA,GAAAA,KAAH,2GAMRpB,EAAYoB,EAAAA,GAAAA,IAAH,qEAKTL,EAAcK,EAAAA,GAAAA,QAAH,g2BA2DXD,EAAiBC,EAAAA,GAAAA,IAAH","sources":["webpack://dw-website/./src/components/tags.js","webpack://dw-website/./src/styles/tags.module.css","webpack://dw-website/./src/components/categories.js","webpack://dw-website/./src/styles/categories.module.css","webpack://dw-website/./src/components/comments.js","webpack://dw-website/./src/templates/post-template.js"],"sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\n\nimport * as styles from \"../styles/tags.module.css\";\n\nconst toKebabCase = (str) => {\n  return str\n    .match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)\n    .map((x) => x.toLowerCase())\n    .join('-');\n};\n\nconst getLabel = () => {\n  return (\n    <span className={styles.TagsLabel}>Tagged with</span>\n  )\n}\n\nconst Tags = ({ tags, showLabel }) => {\n  return (\n    <>\n      {showLabel ? getLabel() : ''}\n      {tags &&\n        tags.map((tag) => {\n          return (\n            <span className={styles.Tag} key={tag}>\n              <Link to={`/tags/${toKebabCase(tag)}`}>{tag}</Link>\n            </span>\n          );\n        })}\n    </>\n  );\n};\n\nexport default Tags;","// extracted by mini-css-extract-plugin\nexport var Tag = \"tags-module--Tag--OE7fw\";\nexport var StyledTags = \"tags-module--StyledTags--EqHel\";\nexport var TagsLabel = \"tags-module--TagsLabel--i-a+c\";","import React from 'react';\nimport { Link } from 'gatsby';\n\nimport * as styles from \"../styles/categories.module.css\";\n\nconst toKebabCase = (str) => {\n  return str\n    .match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)\n    .map((x) => x.toLowerCase())\n    .join('-');\n};\n\nconst getLabel = () => {\n  return (\n    <span className={styles.CategoriesLabel}>Categorized under </span>\n  )\n}\n\nconst Categories = ({ categories, showLabel }) => {\n  return (\n    <div>\n      {showLabel ? getLabel() : '' }\n      {categories &&\n        categories.map((category) => {\n          return (\n            <span key={category} className={styles.Category} >\n              <Link to={`/categories/${toKebabCase(category)}`}>{category}</Link>\n            </span>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default Categories;\n","// extracted by mini-css-extract-plugin\nexport var Category = \"categories-module--Category--x-dkq\";\nexport var CategoriesLabel = \"categories-module--CategoriesLabel--dN+ff\";","import React, { useEffect } from 'react';\n\nconst COMMENTS_ID = 'graphcomment';\n\nconst Comments = () => {\n    // provided by https://www.emgoto.com/gatsby-comments/\n    useEffect(() => {\n        window.gc_params = {\n            graphcomment_id: 'davidwesst-com',\n            fixed_header_height: 0,\n          };\n\n        const script = document.createElement('script');\n        script.src = 'https://graphcomment.com/js/integration.js?' + Date.now();\n        script.async = true;\n\n        const comments = document.getElementById(COMMENTS_ID);\n        if (comments) comments.appendChild(script);\n\n        // This function will get called when the component unmounts\n        // To make sure we don't end up with multiple instances of the comments component\n        return () => {\n            const comments = document.getElementById(COMMENTS_ID);\n            if (comments) comments.innerHTML = '';\n        };\n    }, []);\n\n    return <div id={COMMENTS_ID} />\n};\n\nexport default Comments;","import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport { GatsbyImage } from \"gatsby-plugin-image\"\nimport Layout from '../components/layout';\nimport styled from 'styled-components';\nimport Tags from '../components/tags';\nimport Categories from '../components/categories';\nimport Comments from '../components/comments';\n\nconst PostTemplate = ({ data }) => {\n  const { frontmatter, html, fields } = data.markdownRemark;\n  const prev = data.prev;\n  const next = data.next;\n  const headerImage = frontmatter.social_image ? (\n    <PostImage>\n      <GatsbyImage \n        alt=''\n        image={frontmatter.social_image.childImageSharp.gatsbyImageData}\n        />\n    </PostImage>\n  ) : '';\n\n  return (\n    <Layout\n      title={frontmatter.title}\n      description={frontmatter.excerpt || frontmatter.description}\n      socialImage={\n        frontmatter.social_image ? frontmatter.social_image.publicURL : ''\n      }\n    >\n      \n      <PostWrapper>\n        <article>\n          <PostTitle>{frontmatter.title}</PostTitle>\n          <PostDate>{frontmatter.date}</PostDate>\n          <Categories categories={frontmatter.categories} showLabel={true} />\n\n          {headerImage}\n\n          <PostContent dangerouslySetInnerHTML={{ __html: html }} />\n          <Tags tags={frontmatter.tags} />\n        </article>\n\n        <Comments slug={fields.slug} />\n        \n        <PostPagination>\n          {prev && (\n            <div>\n              <span>previous</span>\n              <Link to={prev.fields.slug}> {prev.frontmatter.title}</Link>\n            </div>\n          )}\n\n          {next && (\n            <div>\n              <span>next</span>\n              <Link to={next.fields.slug}> {next.frontmatter.title}</Link>\n            </div>\n          )}\n        </PostPagination>\n      </PostWrapper>\n    </Layout>\n  );\n};\n\nexport default PostTemplate;\n\nconst PostWrapper = styled.div`\n  padding-top: var(--size-900);\n  padding-bottom: var(--size-900);\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 70ch;\n  word-wrap: break-word;\n`;\n\nconst PostTitle = styled.h1`\n  font-size: var(--size-700);\n`;\n\nconst PostDate = styled.span`\n  font-size: var(--size-400);\n  padding-top: 1rem;\n  text-transform: uppercase;\n`;\n\nconst PostImage = styled.div`\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n`\n\nconst PostContent = styled.section`\n  padding-top: var(--size-800);\n\n  & > * + * {\n    margin-top: var(--size-300);\n  }\n\n  & > p + p {\n    margin-top: var(--size-700);\n  }\n\n  * + h1,\n  * + h2,\n  * + h3 {\n    margin-top: var(--size-900);\n  }\n\n  h1 {\n    font-size: var(--size-700);\n  }\n\n  h2 {\n    font-size: var(--size-600);\n  }\n\n  h3 {\n    font-size: var(--size-500);\n  }\n\n  b,\n  strong {\n    font-weight: 600;\n  }\n\n  a {\n    color: inherit;\n    text-decoration: underline;\n    text-decoration-thickness: 0.125rem;\n  }\n\n  blockquote {\n    padding-left: var(--size-400);\n    border-left: 5px solid;\n    font-style: italic;\n  }\n\n  code {\n    font-family: 'Source Sans Pro', monospace;\n    overflow-x: auto;\n    white-space: pre-wrap;\n  }\n\n  pre {\n    overflow-x: auto;\n    white-space: pre-wrap;\n    max-width: 100%;\n  }\n`;\n\nconst PostPagination = styled.nav`\n  display: flex;\n  flex-wrap: wrap;\n  margin-top: var(--size-900);\n\n  & > * {\n    position: relative;\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    padding: 1rem;\n    padding-top: 0.5rem;\n    padding-bottom: 0.5rem;\n    border-radius: 8px;\n    border: 1px solid rgba(255, 255, 255, 0.5);\n    background-color: rgba(255, 255, 255, 0.3);\n    backdrop-filter: blur(10px);\n    margin: 0.5rem;\n  }\n\n  & > *:hover {\n    background-color: rgba(255, 255, 255, 0.5);\n  }\n\n  & span {\n    text-transform: uppercase;\n    opacity: 0.6;\n    font-size: var(--size-400);\n    padding-bottom: var(--size-500);\n  }\n\n  & a {\n    color: inherit;\n    text-decoration: none;\n    font-size: var(--size-400);\n    text-transform: capitalize;\n  }\n\n  & a::after {\n    content: '';\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n  }\n`;\n\nexport const pageQuery = graphql`\n  query PostBySlug($slug: String!, $prevSlug: String, $nextSlug: String) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      excerpt(pruneLength: 160)\n      html\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        tags\n        categories\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        excerpt\n        social_image {\n          publicURL\n          childImageSharp {\n            gatsbyImageData (layout: CONSTRAINED)\n          }\n        }\n      }\n    }\n\n    prev: markdownRemark(fields: { slug: { eq: $prevSlug } }) {\n      frontmatter {\n        title\n      }\n      fields {\n        slug\n      }\n    }\n\n    next: markdownRemark(fields: { slug: { eq: $nextSlug } }) {\n      frontmatter {\n        title\n      }\n      fields {\n        slug\n      }\n    }\n  }\n`;\n"],"names":["tags","showLabel","className","map","tag","key","Link","to","str","match","x","toLowerCase","join","categories","category","COMMENTS_ID","useEffect","window","gc_params","graphcomment_id","fixed_header_height","script","document","createElement","src","Date","now","async","comments","getElementById","appendChild","innerHTML","id","data","markdownRemark","frontmatter","html","fields","prev","next","headerImage","social_image","PostImage","G","alt","image","childImageSharp","gatsbyImageData","title","description","excerpt","socialImage","publicURL","PostWrapper","PostTitle","PostDate","date","PostContent","dangerouslySetInnerHTML","__html","slug","PostPagination","styled"],"sourceRoot":""}