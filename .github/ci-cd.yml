name: CI/CD
on:
  push:
    branches:
      - rc/**
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

env:
  STATICWEBAPPNAME: dw-website

jobs:
  build:
    name: Build
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: |
        git submodule init
        git submodule update --remote --merge
    - uses: actions/setup-node@v2-beta
      with:
        node-version: 16
    - run: npm install -g yarn
    - run: yarn install
    - run: yarn run build
    - run: yarn test
  deploy:
    name: Deploy
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Setup Environment
      uses: azure/arm-deploy@v1
      with:
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
        resourceGroupName: ${{ secrets.AZURE_RG }}
        template: ./main.bicep
        parameters: swaRepositoryToken=${{ secrets.GH_WORKFLOW_TOKEN }}
        failOnStdErr: false

    - name: Static Web App - get API key for deployment
      id: static_web_app_apikey
      uses: azure/CLI@v1
      with:
        inlineScript: |
          APIKEY=$(az staticwebapp secrets list --name '${{ env.STATICWEBAPPNAME }}' | jq -r '.properties.apiKey')
          echo "::set-output name=APIKEY::$APIKEY"

    - name: Deploy Application
      id: static_web_app_build_and_deploy
      uses: Azure/static-web-apps-deploy@v1
      with:
        azure_static_web_apps_api_token: ${{ steps.static_web_app_apikey.outputs.APIKEY }}
        repo_token: ${{ secrets.GH_WORKFLOW_TOKEN }} # Used for Github integrations (i.e. PR comments)
        action: 'upload'
        app_build_command: 'yarn run build'
        app_location: '.' # App source code path
        output_location: './dist' # Built app content directory - optional

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Clean-Up PR Staging Environment
    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get API key for deployment
        id: apikey
        uses: azure/CLI@v1
        with:
          inlineScript: |
            APIKEY=$(az staticwebapp secrets list --name '${{ env.STATICWEBAPPNAME }}' | jq -r '.properties.apiKey')
            echo "::set-output name=APIKEY::$APIKEY"

      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ steps.apikey.outputs.APIKEY }}
          action: 'close'